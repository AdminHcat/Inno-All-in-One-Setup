// --- Generated by InnoSetup Script Joiner version 3.0, Jul 22 2009, (c) Bulat Ziganshin <Bulat.Ziganshin@gmail.com>. More info at http://issjoiner.codeplex.com/

// --- Source: 11.iss ------------------------------------------------------------
var
  PageNameLabel, PageDescriptionLabel: TLabel;


function NextButtonClick1(CurPageID: Integer): Boolean;
begin
  Result := True;
end;

function NeedRestart1(): Boolean;
begin
  Result := True;
end;

function GetCustomSetupExitCode1(): Integer;
begin
  Result := 1;
end;

procedure InitializeWizard1();
begin
  WizardForm.WelcomeLabel1.Hide;
  WizardForm.WelcomeLabel2.Hide;
  WizardForm.FinishedHeadingLabel.Hide;
  WizardForm.FinishedLabel.Hide;
  WizardForm.WizardBitmapImage.Width := WizardForm.Width;
  WizardForm.WizardBitmapImage.Height := WizardForm.Height;

  PageNameLabel := TLabel.Create(WizardForm);
  with PageNameLabel do
  begin
    Left := ScaleX(10);
    Top := ScaleY(10);
    Width := ScaleX(300);
    Height := ScaleY(14);
    AutoSize := False;
    WordWrap := True;
    Font.Color := clWhite;
    Font.Style := [fsBold];
    ShowAccelChar := False;
    Transparent := True;
    Parent := WizardForm.MainPanel;
  end;

  PageDescriptionLabel := TLabel.Create(WizardForm);
  with PageDescriptionLabel do
  begin
    Left := ScaleX(15);
    Top := ScaleY(25);
    Width := ScaleX(475);
    Height := ScaleY(30);
    AutoSize := False;
    WordWrap := True;
    Font.Color := clWhite;
    ShowAccelChar := False;
    Transparent := True;
    Parent := WizardForm.MainPanel;
  end;

  with WizardForm do
  begin
    PageNameLabel.Hide;
    PageDescriptionLabel.Hide;
    with MainPanel do
    begin
      with WizardSmallBitmapImage do
      begin
        Left := ScaleX(0);
        Top := ScaleY(0);
        Width := Mainpanel.Width;
        Height := MainPanel.Height;
      end;
    end;
  end;
end;


procedure CurPageChanged1(CurPageID: Integer);
begin
  PageNameLabel.Caption := WizardForm.PageNameLabel.Caption;
  PageDescriptionLabel.Caption := WizardForm.PageDescriptionLabel.Caption;
end;


// --- Source: 12.iss ------------------------------------------------------------
function NextButtonClick2(CurPageID: Integer): Boolean;
begin
  Result := True;
end;

function NeedRestart2(): Boolean;
begin
  Result := True;
end;

function GetCustomSetupExitCode2(): Integer;
begin
  Result := 1;
end;

procedure InitializeWizard2();
var
  WLabel1, WLabel2,
  FLabel1, FLabel2: TLabel;
begin
  WizardForm.WelcomeLabel1.Hide;
  WizardForm.WelcomeLabel2.Hide;
  WizardForm.FinishedHeadingLabel.Hide;
  WizardForm.FinishedLabel.Hide;
  WizardForm.WizardBitmapImage.Width := WizardForm.Width;
  WizardForm.WizardBitmapImage.Height := WizardForm.Height;

  WLabel1 := TLabel.Create(WizardForm);
  WLabel1.Left := ScaleX(176);
  WLabel1.Top := ScaleY(16);
  WLabel1.Width := ScaleX(301);
  WLabel1.Height := ScaleY(54);
  WLabel1.AutoSize := False;
  WLabel1.WordWrap := True;
  WLabel1.Font.Size := 12;
  WLabel1.Font.Style := [fsBold];
  WLabel1.Font.Color:= clBlack;
  WLabel1.ShowAccelChar := False;
  WLabel1.Caption := WizardForm.WelcomeLabel1.Caption;
  WLabel1.Transparent := True;
  WLabel1.Parent := WizardForm.WelcomePage;

  WLabel2 :=TLabel.Create(WizardForm);
  WLabel2.Top := ScaleY(76);
  WLabel2.Left := ScaleX(176);
  WLabel2.Width := ScaleX(301);
  WLabel2.Height := ScaleY(234);
  WLabel2.AutoSize := False;
  WLabel2.WordWrap := True;
  WLabel2.Font.Color:= clBlack;
  WLabel2.ShowAccelChar := False;
  WLabel2.Caption := WizardForm.WelcomeLabel2.Caption;
  WLabel2.Transparent := True;
  WLabel2.Parent := WizardForm.WelcomePage;

  WizardForm.WizardBitmapImage2.Width := WizardForm.Width;
  WizardForm.WizardBitmapImage2.Height := WizardForm.Height;

  FLabel1 := TLabel.Create(WizardForm);
  FLabel1.Left := ScaleX(176);
  FLabel1.Top := ScaleY(16);
  FLabel1.Width := ScaleX(301);
  FLabel1.Height := ScaleY(54);
  FLabel1.AutoSize := False;
  FLabel1.WordWrap := True;
  FLabel1.Font.Size := 12;
  FLabel1.Font.Style := [fsBold];
  FLabel1.Font.Color:= clBlack;
  FLabel1.ShowAccelChar := False;
  FLabel1.Caption := WizardForm.FinishedHeadingLabel.Caption;
  FLabel1.Transparent := True;
  FLabel1.Parent := WizardForm.FinishedPage;

  FLabel2 :=TLabel.Create(WizardForm);
  FLabel2.Top := ScaleY(76);
  FLabel2.Left := ScaleX(176);
  FLabel2.Width := ScaleX(301);
  FLabel2.Height := ScaleY(53);
  FLabel2.AutoSize := False;
  FLabel2.WordWrap := True;
  FLabel2.Font.Color:= clBlack;
  FLabel2.ShowAccelChar := False;
  FLabel2.Caption := 'Программа установлена на Ваш компьютер.' #13#13
                     'Нажмите <Завершить>, чтобы выйти из программы установки.';
  FLabel2.Transparent := True;
  FLabel2.Parent := WizardForm.FinishedPage;
end;


// --- Source: 13.iss ------------------------------------------------------------
const
  NeedSize = 3700;

var
NeedSpaceLabel,FreeSpaceLabel: TLabel;
FreeMB, TotalMB: Cardinal;


procedure GetFreeSpaceCaption(Sender: TObject);
var
Path: String;
begin
Path := ExtractFileDrive(WizardForm.DirEdit.Text);
GetSpaceOnDisk(Path, True, FreeMB, TotalMB);
if FreeMB > 1024 then
FreeSpaceLabel.Caption := 'Свободно на выбранном диске: ' + FloatToStr(round(FreeMB/1024*100)/100) + ' GB'
else
FreeSpaceLabel.Caption := 'Свободно на выбранном диске: ' + IntToStr(FreeMB)+ ' MB';
begin
if FreeMB < NeedSize then
begin
WizardForm.NextButton.Enabled:=false;
end else
WizardForm.NextButton.Enabled:=true;
end;
end;

procedure InitializeWizard3();
begin
WizardForm.DiskSpaceLabel.Hide;

NeedSpaceLabel := TLabel.Create(WizardForm);
with NeedSpaceLabel do
begin
Parent := WizardForm.SelectDirPage;
Left := ScaleX(0);
Top := ScaleY(198);
Width := ScaleX(209);
Height := ScaleY(13);
Caption := 'Требуется для установки: xxx GB';
end;

FreeSpaceLabel := TLabel.Create(WizardForm);
with FreeSpaceLabel do
begin
Parent := WizardForm.SelectDirPage;
Left := ScaleX(0);
Top := ScaleY(216);
Width := ScaleX(209);
Height := ScaleY(13);
end;


WizardForm.DirEdit.OnChange := @GetFreeSpaceCaption;
WizardForm.DirEdit.Text := WizardForm.DirEdit.Text + #0;
end;

procedure CurPageChanged3(CurPageID: Integer);
begin
if  CurPageID = wpSelectDir then
if FreeMB < NeedSize then
begin
WizardForm.NextButton.Enabled:=False
end;
end;


// --- Source: 14.iss ------------------------------------------------------------
var
    Dop: TCheckBox;
    DesktopIcon: TCheckBox;

function MakeDesktopIcon: Boolean;
begin
    Result:=DesktopIcon.Checked;
end;

function InstallDop: Boolean;
begin
    Result:=Dop.Checked;
end;

procedure InitializeWizard4();
begin
    dop := TCheckBox.Create(WizardForm);
    with Dop do
    begin
        Parent := WizardForm.SelectDirPage;
        Caption := 'Установить дополнительные программы ';
        Left := ScaleX(0);
        Top := WizardForm.DirEdit.Top+35;
        Width := ScaleX(400);
        Height := ScaleY(15);
        TabOrder := 0;
        Checked := True;
    end;

    DesktopIcon := TCheckBox.Create(WizardForm);
    with DesktopIcon do
    begin
        Parent := WizardForm.SelectDirPage;
        Caption := 'Добавить ярлык на рабочий стол';
        Left := ScaleX(0);
        Top := dop.Top + 35;
        Width := ScaleX(400);
        Height := ScaleY(15);
        TabOrder := 0;
        Checked := True;
    end;
end;


// --- Dispatching code ------------------------------------------------------------

function NextButtonClick(CurPageID: Integer): Boolean;
begin
  Result := NextButtonClick1(CurPageID); if not Result then exit;
  Result := NextButtonClick2(CurPageID); if not Result then exit;
end;

function NeedRestart(): Boolean;
begin
  Result := NeedRestart1(); if Result then exit;
  Result := NeedRestart2(); if Result then exit;
end;

function GetCustomSetupExitCode(): Integer;
begin
  Result := GetCustomSetupExitCode1(); if Result>0 then exit;
  Result := GetCustomSetupExitCode2(); if Result>0 then exit;
end;

procedure InitializeWizard();
begin
  InitializeWizard1();
  InitializeWizard2();
  InitializeWizard3();
  InitializeWizard4();
end;

procedure CurPageChanged(CurPageID: Integer);
begin
  CurPageChanged1(CurPageID);
  CurPageChanged3(CurPageID);
end;


